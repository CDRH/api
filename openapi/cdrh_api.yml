swagger: "2.0"

info:
  title: CDRH API
  description: API to access all public Center for Digital Research in the Humanities resources
  version: 0.1.0
  contact:
    name: CDRH Dev Team
    url: https://cdrhapi.unl.edu/contact
  termsOfService: https://cdrhapi.unl.edu/terms
#  license:
#    name:
#    url:

externalDocs:
  description: GitHub Repository
  url: https://github.com/cdrh/api



# HTTP Specs
schemes:
  - https
host: cdrhapi.unl.edu
basePath: /v1

# Global MIME Types
consumes:
- application/json
- text/plain; charset=utf-8
produces:
- application/json
- text/plain; charset=utf-8



# Security
securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: header
    description: API Key security/throttling scheme
  basic:
    type: basic
    description: Basic HTTP Auth

security:
-
  api_key: []
-
  basic: []



# Reference Objects
parameters:
  # Path
  id:
    name: id
    in: path
    type: string
    description: id of the requested document
    required: true

  slug:
    name: slug
    in: path
    type: string
    description: slug of the requested collection
    required: true


  # Query
  f:
    name: f
    in: query
    description: 'field names to query (ex: f.subcategory=photography&f.collection=neihardt)'
    required: false
    # Not sure how to define this with changing fields, but this seems to fit their spec
    type: array
    items:
      type: string

  facets:
    name: facets
    in: query
    description: 'fields to facet items (ex: facets[]=novel&facets[]=author'
    required: false
    type: array
    items:
      type: string

  hl:
    name: hl
    in: query
    description: disable highlighting
    required: false
    type: boolean

  min:
    name: min
    in: query
    description: minimize meta API fields returned
    required: false
    type: boolean

  num:
    name: num
    in: query
    description: max number of items to return per query (default 10)
    required: false
    type: integer

  q:
    name: q
    in: query
    description: query string
    required: false
    type: string

  sort:
    name: sort
    in: query
    description: field to sort ascending
    required: false
    type: string

  # I forgot how we decided to do this, so just copied this quick
  sort_desc:
    name: sort_desc
    in: query
    description: field to sort descending
    required: false
    type: string

  start:
    name: start
    in: query
    description: index of first item to return in pagination
    required: false
    type: integer



tags:
-
  name: collection
  description: operations with collections
-
  name: item
  description: operations with items



# TODO: Add extra response codes like 202, 204 no content?
paths:
  /:
    get:
      summary: API data
      description: Returns information about the API itself
      responses:
        200:
          description: Information about the API
          schema:
            $ref: '#/definitions/root'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'

  /collection/{slug}:
    get:
      summary: Gets a specific collection
      description: List Items
      tags:
      - collection
      parameters:
      - $ref: '#/parameters/slug'
      responses:
        200:
          description: A list of items for a specific collection
          schema:
            $ref: '#/definitions/items'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'

  /collection/{slug}/info/:
    get:
      summary: Gets a specific collection
      description: List information about the collection, including the fields/schema.
      tags:
      - collection
      parameters:
      - $ref: '#/parameters/slug'
      responses:
        200:
          description: A Collection
          schema:
            $ref: '#/definitions/collection_info'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'

  /collection/{slug}/item/{id}/:
    get:
      summary: Gets a specific item
      description: Return a specific item from a CDRH collection.
      tags:
      - collection
      - item
      parameters:
      - $ref: '#/parameters/slug'
      - $ref: '#/parameters/id'
      responses:
        200:
          description: A list of items
          schema:
            $ref: '#/definitions/items'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'

  /collections:
    get:
      summary: Retrieves a list of collections
      description: Returns a list of all CDRH collections.
      responses:
        200:
          description: A list of collections
          schema:
            $ref: '#/definitions/collections'

  /item/{id}:
    get:
      summary: Gets a specific document
      description: Returns a single document by id
      tags:
      - item
      parameters:
      - $ref: '#/parameters/id'
      responses:
        200:
          description: A list of items
          schema:
            $ref: '#/definitions/items'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'

  /items:
    get:
      summary: Retrieves items
      description: Returns a list of all CDRH items (documents).
      tags:
      - item
      parameters:
      - $ref: '#/parameters/f'
      - $ref: '#/parameters/facets'
      - $ref: '#/parameters/hl'
      - $ref: '#/parameters/min'
      - $ref: '#/parameters/num'
      - $ref: '#/parameters/q'
      - $ref: '#/parameters/sort'
      - $ref: '#/parameters/sort_desc'
      - $ref: '#/parameters/start'
      responses:
        200:
          description: A list of items
          schema:
            $ref: '#/definitions/items'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'



# Models
definitions:
  error:
    type: object
    properties:
      req:
        type: object
        properties:
          query_string:
            type: string
            description: request query
      res:
        type: object
        properties:
          code:
            type: integer
            description: response code
          message:
            type: string
            description: http error message
      info:
        type: object
        required:
        - error
        properties:
          documentation:
            type: string
            description: Link to endpoint documentation
          error:
            type: string
            description: friendly error message
          suggestion:
            type: string
            description: Link to a fuzzified query or next level up endpoint

  collection_info:
    type: object
    properties:
      req:
        type: object
        properties:
          query_string:
            type: string
            description: request query
      res:
        type: object
        properties:
          code:
            type: integer
      info:
        type: object
        required:
        - collection
        - endpoints
        - fields
        properties:
          collection:
            $ref: '#/definitions/_collection'
          endpoints:
            type: array
            description: collection endpoints
            items:
              type: string
          fields:
            allOf:
            - $ref: '#/definitions/_fields_common'
            - type: object
              # Collection-specific fields
              additionalProperties:
                $ref: '#/definitions/_field'
        example:
          collection:
            collection_name: Star Trek Scripts
            description: "Scripts of Star Trek: The Original Series"
            slug: trek_scripts
          endpoints:
          - item/{id}
          fields:
            id:
              data_type: integer
              description: unique identifier
              indexed: false
              required: true
            data_type:
              data_type: string
              description: data type of field
              indexed: false
              required: true
            collection:
              data_type: string
              description: full name of containing collection
              indexed: false
              required: true
            slug:
              data_type: string
              description: short name of containing collection
              indexed: true
              required: true
            title:
              data_type: string
              description: title of item
              indexed: true
              required: true
            uri:
              data_type: string
              description: URI to item page in UI
              indexed: true
              required: true
            trek_scripts_air_date_d:
              data_type: date
              description: original air date of script's episode
              indexed: true
              required: true
            trek_scripts_deleted_scenes_b:
              data_type: boolean
              description: whether script's episode has deleted scenes
              indexed: true
              required: false
              trek_scripts_deleted_scenes.scene_is:
              -
                data_type: string
                description: description of script's episode's deleted scene
                indexed: true
                required: false
            trek_scripts_storyboards_b:
              description: whether script's episode has storyboards
              data_type: boolean
              indexed: true
              required: false

  collections:
    type: object
    properties:
      res:
        type: object
        properties:
          code:
            type: integer
      info:
        type: object
        required:
        - endpoints
        - collections
        properties:
          endpoints:
            type: array
            description: collection endpoints
            items:
              type: string
          collections:
            type: array
            items:
              $ref: '#/definitions/_collection'

  items:
    type: object
    properties:
      req:
        type: object
        properties:
          query_string:
            type: string
            description: request query
      res:
        type: object
        properties:
          code:
            type: integer
            description: '200'
          count:
            type: integer
            description: number of items found

      items:
        type: array
        items:
          type: object
          required:
          - id
          - item_url
          - collection
          - collection_name
          properties:
            id:
              type: string
              description: unique identifier for item
            item_url:
              type: string
              description: canonical location of item in api
            collection:
              type: string
              description: the slug of a collection
            collection_name:
              type: string
              description: full name of a collection
            fields_other:
              type: boolean
              description: indicate more than common fields are present
            highlights:
              type: array
              description: list of highlight element
              items:
                type: string
            language:
              type: string
              description: language of item (default English)

  root:
    type: object
    properties:
      res:
        type: object
        properties:
          code:
            type: integer
      info:
        type: object
        properties:
          api_updated:
            type: string
            format: date
            description: date api code was last updated
          contact:
            type: string
            description: https://cdrhapi.unl.edu/contact
          description:
            type: string
            description: API to access all public Center for Digital Research in the Humanities resources
          documentation:
            type: string
            description: https://cdrhapi.unl.edu/docs
          endpoints:
            type: array
            description: list of endpoints
            items:
              type: string
          fields:
            type: array
            description: list of common fields
            items:
              type: string
          index_updated:
            type: string
            format: date
            description: date api contents were last updated
          license:
            type: string
            description: software license applied to API code and contents (name | url)
          terms_of_service:
            type: string
            description: API terms of service agreed to upon use of non-root endpoint
          version:
            type: string
            description: major.minor.patch

  # Partial Definitions
  _collection:
    type: object
    required:
    - collection_name
    - description
    - slug
    properties:
      collection_name:
        type: string
        description: full name of collection
      description:
        type: string
        description: collection description
      image_url:
        type: string
        description: URL to collection image
      site_url:
        type: string
        description: URL to collection site
      slug:
        type: string
        description: short name of collection

  _field:
    type: object
    required:
    - data_type
    - description
    - indexed
    - required
    properties:
      data_type:
        type: string
        description: field data type
        enum:
        - binary
        - boolean
        - date
        - geo_point
        - geo_shape
        - integer
        - list
        - number
        - string
      description:
        type: string
        description: field description
      filters:
        type: array
        description: list of language filters used when indexing data
        items:
          type: string
      indexed:
        type: boolean
        description: whether field is indexed or not
      required:
        type: boolean
        description: whether field is required or not
    additionalProperties:
      type: array
      description: Nested Objects
      items:
        $ref: '#/definitions/_field'

  _fields_common:
    type: object
    required:
    - collection
    - data_type
    - id
    - slug
    - title
    - uri
    properties:
      collection:
        $ref: '#/definitions/_field'
      data_type:
        $ref: '#/definitions/_field'
      id:
        $ref: '#/definitions/_field'
      image_id:
        $ref: '#/definitions/_field'
      image_location:
        $ref: '#/definitions/_field'
      slug:
        $ref: '#/definitions/_field'
      title:
        $ref: '#/definitions/_field'
      uri:
        $ref: '#/definitions/_field'
      uri_html:
        $ref: '#/definitions/_field'
      uri_xml:
        $ref: '#/definitions/_field'

