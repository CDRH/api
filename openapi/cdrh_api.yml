swagger: "2.0"

info:
  title: CDRH API
  description: API to access all public Center for Digital Research in the Humanities resources
  version: 0.1.0
  contact:
    name: CDRH Dev Team
    url: https://cdrhapi.unl.edu/contact
  termsOfService: https://cdrhapi.unl.edu/terms
#  license:
#    name:
#    url:

externalDocs:
  description: GitHub Repository
  url: https://github.com/cdrh/api



# HTTP Specs
schemes:
  - https
host: cdrhapi.unl.edu
basePath: /v1

# Global MIME Types
consumes:
- application/json
- text/plain; charset=utf-8
produces:
- application/json
- text/plain; charset=utf-8



# Security
securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: header
    description: API Key security/throttling scheme
  basic:
    type: basic
    description: Basic HTTP Auth

security:
-
  api_key: []
-
  basic: []



# Reference Objects
# TODO
# - Add formats
# - Add validation properties (min, max, etc)
parameters:
  # Path
  id:
    name: id
    in: path
    type: string
    description: id of the requested document
    required: true

  shortname:
    name: shortname
    in: path
    type: string
    description: shortname of the requested collection
    required: true


  # Query
  f:
    name: f[]
    in: query
    description: 'field names to query; value is two-element array with field name and query string separated by pipe (ex: f[]=subcategory|photography&f[]=collection|neihardt)'
    required: false
    type: array
    collectionFormat: multi
    items:
      type: array
      collectionFormat: pipes
      items:
        type: string

  facet:
    name: facet[]
    in: query
    description: 'fields to facet items (ex: facet[]=novel&facet[]=author)'
    required: false
    type: array
    collectionFormat: multi
    items:
      type: string

  facet_sort:
    name: facet_sort
    in: query
    description: 'order to return facets. Default "score|desc", otherwise "term". (ex: facet_sort=term|asc)'
    type: string
    required: false

  facet_num:
    name: facet_num
    in: query
    description: number of facets
    type: integer
    required: false

  # facet_start:
  #   name: facet_start
  #   in: query
  #   description: index of first facet to return in pagination
  #   type: integer
  #   required: false

  hl:
    name: hl
    in: query
    description: disable highlighting
    required: false
    type: boolean
    allowEmptyValue: true

  min:
    name: min
    in: query
    description: minimize meta API fields returned
    required: false
    type: boolean
    allowEmptyValue: true

  num:
    name: num
    in: query
    description: max number of items to return per query
    required: false
    type: integer
    default: 10

  q:
    name: q
    in: query
    description: query string
    required: false
    type: string

  sort:
    name: sort[]
    in: query
    description: 'sort field and order (ex: sort=title|asc&date|desc)'
    required: false
    type: array
    collectionFormat: multi
    items:
      type: array
      collectionFormat: pipes
      items:
        type: string

  start:
    name: start
    in: query
    description: index of first item to return in pagination
    required: false
    type: integer



# TODO
# Add responses reference objects?



tags:
-
  name: collection
  description: operations with collections
-
  name: item
  description: operations with items



# TODO
# - Consider adding paths for only returning collection(s') or items' images
# - Consider removal of /items path so no redundant paths
#   - Where would it be used if /collection/{shortname}/item/{id} is canonical?
# - Consider /collection/{shortname}/item/{title|title_abbrev} for pretty URLs + SEO
#   - Any non-integer value triggers retrieval based on title|title_abbrev
# - Brainstorm any other initial operations and response codes
paths:
  /:
    get:
      summary: API data
      description: Returns information about the API itself
      responses:
        200:
          description: Information about the API
          schema:
            $ref: '#/definitions/root'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'

  /collection/{shortname}/items:
    get:
      summary: Gets a specific collection
      description: List Items
      tags:
      - collection
      parameters:
      - $ref: '#/parameters/shortname'
      - $ref: '#/parameters/f'
      - $ref: '#/parameters/facet'
      - $ref: '#/parameters/facet_sort'
      - $ref: '#/parameters/facet_num'
      # - $ref: '#/parameters/facet_start'
      - $ref: '#/parameters/hl'
      - $ref: '#/parameters/min'
      - $ref: '#/parameters/num'
      - $ref: '#/parameters/q'
      - $ref: '#/parameters/sort'
      - $ref: '#/parameters/start'
      responses:
        200:
          description: A list of items for a specific collection
          schema:
            $ref: '#/definitions/items'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'

  /collection/{shortname}:
    get:
      summary: Gets a specific collection
      description: List information about the collection, including the fields/schema.
      tags:
      - collection
      parameters:
      - $ref: '#/parameters/shortname'
      responses:
        200:
          description: A Collection
          schema:
            $ref: '#/definitions/collection_info'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'

  /collection/{shortname}/item/{id}/:
    get:
      summary: Gets a specific document
      description: Return a specific item from a CDRH collection.
      tags:
      - collection
      - item
      parameters:
      - $ref: '#/parameters/shortname'
      - $ref: '#/parameters/id'
      responses:
        200:
          description: A list of items
          schema:
            $ref: '#/definitions/items'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'

  /collections:
    get:
      summary: Retrieves a list of collections
      description: Returns a list of all CDRH collections.
      responses:
        200:
          description: A list of collections
          schema:
            $ref: '#/definitions/collections'

  /item/{id}:
    get:
      summary: Gets a specific document
      description: Returns a single document by id
      tags:
      - item
      parameters:
      - $ref: '#/parameters/id'
      responses:
        200:
          description: A list of items
          schema:
            $ref: '#/definitions/items'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'

  /items:
    get:
      summary: Retrieves items
      description: Returns a list of all CDRH items (documents).
      tags:
      - item
      parameters:
      - $ref: '#/parameters/f'
      - $ref: '#/parameters/facet'
      - $ref: '#/parameters/facet_sort'
      - $ref: '#/parameters/facet_num'
      # - $ref: '#/parameters/facet_start'
      - $ref: '#/parameters/hl'
      - $ref: '#/parameters/min'
      - $ref: '#/parameters/num'
      - $ref: '#/parameters/q'
      - $ref: '#/parameters/sort'
      - $ref: '#/parameters/start'
      responses:
        200:
          description: A list of items
          schema:
            $ref: '#/definitions/items'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'



# Models
# TODO
# - Add defaults
# - Add enums
# - Add formats
# - Finalize set of common fields and field properties
definitions:
  error:
    type: object
    properties:
      req:
        $ref: '#/definitions/_req'
      res:
        type: object
        properties:
          code:
            type: integer
            description: response code
          message:
            type: string
            description: http error message
          info:
            type: object
            required:
            - error
            properties:
              documentation:
                type: string
                description: Link to endpoint documentation
              error:
                type: string
                description: friendly error message
              suggestion:
                type: string
                description: Link to a fuzzified query or next level up endpoint

  collection_info:
    type: object
    properties:
      req:
        $ref: '#/definitions/_req'
      res:
        type: object
        properties:
          code:
            type: integer
          info:
            type: object
            required:
            - collection
            - endpoints
            - fields
            properties:
              collection:
                $ref: '#/definitions/_collection'
              endpoints:
                type: array
                description: collection endpoints
                items:
                  type: string
              fields:
                allOf:
                - $ref: '#/definitions/_fields_common'
                - type: object
              # Collection-specific fields
                  additionalProperties:
                    $ref: '#/definitions/_field'
        example:
          collection:
            collection_name: Star Trek Scripts
            description: "Scripts of Star Trek: The Original Series"
            shortname: trek_scripts
          endpoints:
          - item/{id}
          fields:
            cdrh-identifier:
              data_type: integer
              description: unique identifier
              indexed: false
              required: true
            cdrh-data_type:
              data_type: string
              description: data type of field
              indexed: false
              required: true
            # is this essentially the "project" field from the api schema?
            collection:
              data_type: string
              description: full name of containing collection
              indexed: false
              required: true
            cdrh-shortname:
              data_type: string
              description: short name of containing collection
              indexed: true
              required: true
            dc-title:
              data_type: string
              description: title of item
              indexed: true
              required: true
            cdrh-uri:
              data_type: string
              description: URI to item page in UI
              indexed: true
              required: true
            project-trek_scripts_air_date_d:
              data_type: date
              description: original air date of script's episode
              indexed: true
              required: true
            project-trek_scripts_deleted_scenes_b:
              data_type: boolean
              description: whether script's episode has deleted scenes
              indexed: true
              required: false
              project-trek_scripts_deleted_scenes.scene_is:
              -
                data_type: string
                description: description of script's episode's deleted scene
                indexed: true
                required: false
            project-trek_scripts_storyboards_b:
              description: whether script's episode has storyboards
              data_type: boolean
              indexed: true
              required: false

  collections:
    type: object
    properties:
      req:
        $ref: '#/definitions/_req'
      res:
        type: object
        properties:
          code:
            type: integer
          info:
            type: object
            required:
            - collections
            properties:
              collections:
                type: array
                items:
                  $ref: '#/definitions/_collection'

  items:
    type: object
    properties:
      req:
        $ref: '#/definitions/_req'
      res:
        type: object
        properties:
          code:
            type: integer
            description: '200'
          count:
            type: integer
            description: number of items found

          items:
            type: array
            items:
              $ref: '#/definitions/_fields_common'

  root:
    type: object
    properties:
      req:
        $ref: '#/definitions/_req'
      res:
        type: object
        properties:
          code:
            type: integer
          info:
            type: object
            properties:
              api_updated:
                type: string
                format: date
                description: date api code was last updated
              contact:
                type: string
                description: https://cdrhapi.unl.edu/contact
              description:
                type: string
                description: API to access all public Center for Digital Research in the Humanities resources
              documentation:
                type: string
                description: https://cdrhapi.unl.edu/docs
              endpoints:
                type: array
                description: list of endpoints
                items:
                  type: string
              fields:
                type: object
                description: globally used fields and descriptions
                items:
                  type: string
              index_updated:
                type: string
                format: date
                description: date api contents were last updated
              license:
                type: string
                description: software license applied to API code and contents (name | url)
              terms_of_service:
                type: string
                description: API terms of service agreed to upon use of non-root endpoint
              version:
                type: string
                description: major.minor.patch

  # Partial Definitions
  _collection:
    type: object
    required:
    - collection_name
    - dc-description
    - cdrh-shortname
    - item_count
    properties:
      # TODO maybe collection_name is cdrh-project and otherwise
      # it is using cdrh-shortname for the "slug"
      collection_name:
        type: string
        description: full name of collection
      dc-description:
        type: string
        description: collection description
      cdrh-image_id:
        type: string
        description: URL to collection image
      cdrh-uri:
        type: string
        description: URL to collection site
      cdrh-shortname:
        type: string
        description: short name of collection
      item_count:
        type: integer
        description: number of items in a given collection
      endpoint:
        type: string
        description: api url to access resource

  _field:
    type: object
    required:
    - data_type
    - description
    - context
    - indexed
    - required
    properties:
      data_type:
        type: string
        description: field data type
        enum:
        - binary
        - boolean
        - date
        - geo_point
        - geo_shape
        - integer
        - list
        - number
        - string
      description:
        type: string
        description: field description
      context:
        type: string
        description: link to schema source (dublin core element uri, etc)
      filters:
        type: array
        description: list of language filters used when indexing data
        items:
          type: string
      indexed:
        type: boolean
        description: whether field is indexed or not
      required:
        type: boolean
        description: whether field is required or not
    additionalProperties:
      type: array
      description: Nested Objects
      items:
        $ref: '#/definitions/_field'
  _req:
    type: object
    properties:
      query_string:
        type: string
        description: request query
  _fields_common:
    type: object
    required:
    # TODO same question as above
    - collection
    - cdrh-data_type
    - cdrh-identifier
    - cdrh-shortname
    - dc-title
    - cdrh-uri
    properties:
      collection:
        $ref: '#/definitions/_field'
      cdrh-data_type:
        $ref: '#/definitions/_field'
      cdrh-identifier:
        $ref: '#/definitions/_field'
      dc-identifier:
        $ref: '#/definitions/_field'
      cdrh-category:
        $ref: '#/definitions/_field'
      cdrh-subcategory:
        $ref: '#/definitions/_field'
      cdrh-image_id:
        $ref: '#/definitions/_field'
      cdrh-fig_location:
        $ref: '#/definitions/_field'
      cdrh-shortname:
        $ref: '#/definitions/_field'
      dc-title:
        $ref: '#/definitions/_field'
      cdrh-title_sort:
        $ref: '#/definitions/_field'
      cdrh-uri:
        $ref: '#/definitions/_field'
      cdrh-uri_html:
        $ref: '#/definitions/_field'
      cdrh-uri_xml:
        $ref: '#/definitions/_field'
      dc-subject:
        $ref: '#/definitions/_field'
      dc-description:
        $ref: '#/definitions/_field'
      cdrh-topics:
        $ref: '#/definitions/_field'
      dcterms-alternative:
        $ref: '#/definitions/_field'
      dc-format:
        $ref: '#/definitions/_field'
      dc-language:
        $ref: '#/definitions/_field'
      dc-relation:
        $ref: '#/definitions/_field'
      dc-type:
        $ref: '#/definitions/_field'
      dcterms-extent:
        $ref: '#/definitions/_field'
      dcterms-medium:
        $ref: '#/definitions/_field'
      cdrh-date_display:
        $ref: '#/definitions/_field'
      dc-date:
        $ref: '#/definitions/_field'
      cdrh-date_not_before:
        $ref: '#/definitions/_field'
      cdrh-date_not_after:
        $ref: '#/definitions/_field'
      cdrh-rights_uri:
        $ref: '#/definitions/_field'
      dc-publisher:
        $ref: '#/definitions/_field'
      dc-rights:
        $ref: '#/definitions/_field'
      dc-source:
        $ref: '#/definitions/_field'
      dcterms-rights_holder:
        $ref: '#/definitions/_field'
      cdrh-creator_sort:
        $ref: '#/definitions/_field'
      # TODO container fields
      cdrh-people:
        $ref: '#/definitions/_field'
      dc-contributor:
        $ref: '#/definitions/_field'
      dc-creator:
        $ref: '#/definitions/_field'
      # TODO spatial container field
      dcterms-coverage-spatial:
        $ref: '#/definitions/_field'
      cdrh-keywords:
        $ref: '#/definitions/_field'
      cdrh-places:
        $ref: '#/definitions/_field'
      cdrh-works:
        $ref: '#/definitions/_field'
      cdrh-annotations:
        $ref: '#/definitions/_field'
      # TODO are text fields treated differently?
      cdrh-text:
        $ref: '#/definitions/_field'
      dc-abstract:
        $ref: '#/definitions/_field'
